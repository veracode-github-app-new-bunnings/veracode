name: Veracode Static Code Analysis

run-name: Static Code Analysis - ${{ github.event.client_payload.repository.name }}

concurrency:
  group: ${{ github.event.client_payload.event_type }}-${{ github.event.client_payload.repository.name }}-${{ github.event.client_payload.branch }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types:
      - java-maven-pipeline-scan
      - java-maven-policy-scan
      - java-maven-sandbox-scan
      - java-gradle-pipeline-scan
      - java-gradle-policy-scan
      - java-gradle-sandbox-scan
      - source-code-pipeline-scan
      - source-code-policy-scan
      - source-code-sandbox-scan
      - dot-net-pipeline-scan
      - dot-net-policy-scan
      - dot-net-sandbox-scan
      - go-policy-scan
      - go-pipeline-scan
      - go-sandbox-scan
      - dart-policy-scan
      - dart-pipeline-scan
      - dart-sandbox-scan
      - php-pipeline-scan
      - php-policy-scan
      - php-sandbox-scan
      - tsql-pipeline-scan
      - tsql-policy-scan
      - tsql-sandbox-scan
      - plsql-pipeline-scan
      - plsql-policy-scan
      - plsql-sandbox-scan

jobs:
  create-checks-run:
    name: Create Checks Run
    runs-on: ubuntu-latest
    outputs:
      event_name: ${{ steps.extract_language_and_build.outputs.event_name }}
      check_run_id: ${{ steps.create_checks_run.outputs.check_id }}
    steps:
      - name: Create Checks Run
        if: contains(github.event.action, 'policy') || contains(github.event.action, 'pipeline')
        uses: veracode/veracode-checks-action@main
        id: create_checks_run
        with:
          token: ${{ github.event.client_payload.token }}
          repo: ${{ github.event.client_payload.repository.full_name }}
          sha: ${{ github.event.client_payload.sha }}
          name: 'Veracode Static Code Analysis'
          status: 'in_progress'
          details_url: 'https://github.com/${{ github.event.client_payload.repository.owner }}/veracode/actions/runs/${{ github.run_id }}'
      - name: Create metadata
        id: create_metadata_json
        run: |
          if [[ -z ${{ steps.create_checks_run.outputs.check_id }} ]]; then
            check_run_id=''  # Set to empty string if null
          else
            check_run_id=${{ steps.create_checks_run.outputs.check_id }}
          fi
          echo '{
            "check_run_type": "${{ github.event.client_payload.event_type }}",
            "repository_name": "${{ github.event.client_payload.repository.name }}",
            "check_run_id": "${check_run_id}",
            "sha": "${{ github.event.client_payload.sha }}"
          }' > workflow-metadata.json
          echo "check_run_id=${{ steps.create_checks_run.outputs.check_id }}" >> "$GITHUB_OUTPUT"
      - name: Save metadata
        uses: actions/upload-artifact@v3
        with:
          name: workflow-metadata
          path: workflow-metadata.json
      - name: Extract Language and Build
        id: extract_language_and_build
        run: |
          echo "Extracting language and build information"
          event_name=${{ github.event.action }}
          event_name=${event_name%-*} # Remove -scan
          event_name=${event_name%-*} # Remove one more time to get rid of the "-policy" or "-pipeline"
          echo "Extracted Language: $event_name"
          echo "event_name=$event_name" >> "$GITHUB_OUTPUT"

  build:
    needs: create-checks-run
    uses: ./.github/workflows/veracode-build-artifact-for-scanning.yml
    with:
      repository: ${{ github.event.client_payload.repository.full_name }}
      ref: ${{ github.event.client_payload.sha }}
      token: ${{ github.event.client_payload.token }}
      event_name: ${{ needs.create-checks-run.outputs.event_name }}
    secrets: inherit

  pipeline_scan:
    # needs the build step before this job will start running
    needs: [build, create-checks-run]
    if: contains(github.event.action, 'pipeline')
    uses: ./.github/workflows/veracode-pipeline-scan.yml
    with:
      artifact_repository: ${{ github.repository }}
      source_repository: ${{ github.event.client_payload.repository.full_name }}
      run_id: ${{ github.run_id }}
      token: ${{ github.event.client_payload.token }}
      profile_name: ${{ github.event.client_payload.profile_name }}
      check_run_id: ${{ needs.create-checks-run.outputs.check_run_id }}
      fail_checks_on_policy: ${{ github.event.client_payload.fail_checks.fail_checks_on_policy }}
      fail_checks_on_error: ${{ github.event.client_payload.fail_checks.fail_checks_on_error }}
    secrets: inherit

  policy_scan:
    needs: [build, create-checks-run]
    if: contains(github.event.action, 'policy')
    uses: ./.github/workflows/veracode-policy-scan.yml
    with:
      artifact_repository: ${{ github.repository }}
      source_repository: ${{ github.event.client_payload.repository.full_name }}
      run_id: ${{ github.run_id }}
      token: ${{ github.event.client_payload.token }}
      profile_name: ${{ github.event.client_payload.profile_name }}
      moddules_to_scan: ${{ github.event.client_payload.modules_to_scan }}
      check_run_id: ${{ needs.create-checks-run.outputs.check_run_id }}
      fail_checks_on_policy: ${{ github.event.client_payload.fail_checks.fail_checks_on_policy }}
      fail_checks_on_error: ${{ github.event.client_payload.fail_checks.fail_checks_on_error }}
    secrets: inherit
    
  sandbox_scan:
    needs: [build, create-checks-run]
    if: contains(github.event.action, 'sandbox')
    uses: ./.github/workflows/veracode-sandbox-scan.yml
    with:
      artifact_repository: ${{ github.repository }}
      run_id: ${{ github.run_id }}
      token: ${{ github.event.client_payload.token }}
      profile_name: ${{ github.event.client_payload.profile_name }}
      moddules_to_scan: ${{ github.event.client_payload.modules_to_scan }}
      branch: ${{ github.event.client_payload.branch }}
    secrets: inherit
